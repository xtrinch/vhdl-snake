    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; port id's of picoblaze input/output devices
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-column_port_id
   OPERAND2-00
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-row_port_id
   OPERAND2-01
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-data_port_id
   OPERAND2-02
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-ps2_port_id
   OPERAND2-03
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-rand_port_id
   OPERAND2-04
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; ps2 keycodes
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-keycode_left
   OPERAND2-6B
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-keycode_right
   OPERAND2-74
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-keycode_up
   OPERAND2-75
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-keycode_down
   OPERAND2-72
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-keycode_enter
   OPERAND2-5A
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; game constants
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-init_snake_len
   OPERAND2-02
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; register aliases
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-sA
   OPERAND2-reg_fb_col
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-sB
   OPERAND2-reg_fb_row
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-sC
   OPERAND2-reg_fb_data
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-sD
   OPERAND2-reg_ps2_data
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-sE
   OPERAND2-reg_counter1
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-sF
   OPERAND2-reg_score
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-s9
   OPERAND2-reg_isfood
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-s8
   OPERAND2-reg_snake_direction
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-s7
   OPERAND2-reg_snake_len
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-s6
   OPERAND2-reg_snake_head_row
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-s5
   OPERAND2-reg_snake_head_col
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-s4
   OPERAND2-reg_snake_tail_row
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-s3
   OPERAND2-reg_snake_tail_col
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-s2
   OPERAND2-reg_ram_index_head
    COMMENT-; head writes the direction its going to this address
    ADDRESS-000
      LABEL-
INSTRUCTION-NAMEREG
   OPERAND1-s1
   OPERAND2-reg_ram_index_tail
    COMMENT-; tail takes the direction and erases
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; reset vector - at address 0, program always starts here
    ADDRESS-000
      LABEL-
INSTRUCTION-ADDRESS
   OPERAND1-000
   OPERAND2-
    COMMENT-
    ADDRESS-000
      LABEL-start_game
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CALL
   OPERAND1-clear_fb
   OPERAND2-
    COMMENT-
    ADDRESS-001
      LABEL-
INSTRUCTION-CALL
   OPERAND1-load_food
   OPERAND2-
    COMMENT-
    ADDRESS-002
      LABEL-
INSTRUCTION-CALL
   OPERAND1-init_snake
   OPERAND2-
    COMMENT-
    ADDRESS-003
      LABEL-
INSTRUCTION-ENABLE
   OPERAND1-INTERRUPT
   OPERAND2-
    COMMENT-
    ADDRESS-004
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; infinite loop until the game is lost
    ADDRESS-004
      LABEL-main_game
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-004
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_isfood
   OPERAND2-00
    COMMENT-; clear register that tell us whether the pixel is a food pixel
    ADDRESS-005
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; head insertion
    ADDRESS-005
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-reg_snake_direction
   OPERAND2-keycode_left
    COMMENT-
    ADDRESS-006
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-add_to_snake_left
    COMMENT-
    ADDRESS-007
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-reg_snake_direction
   OPERAND2-keycode_right
    COMMENT-
    ADDRESS-008
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-add_to_snake_right
    COMMENT-
    ADDRESS-009
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-reg_snake_direction
   OPERAND2-keycode_up
    COMMENT-
    ADDRESS-00A
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-add_to_snake_up
    COMMENT-
    ADDRESS-00B
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-reg_snake_direction
   OPERAND2-keycode_down
    COMMENT-
    ADDRESS-00C
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-add_to_snake_down
    COMMENT-
    ADDRESS-00D
      LABEL-add_to_snake_left
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-00D
      LABEL-
INSTRUCTION-SUB
   OPERAND1-reg_snake_head_col
   OPERAND2-01
    COMMENT-
    ADDRESS-00E
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-cont
   OPERAND2-
    COMMENT-
    ADDRESS-00F
      LABEL-add_to_snake_right
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-00F
      LABEL-
INSTRUCTION-ADD
   OPERAND1-reg_snake_head_col
   OPERAND2-01
    COMMENT-
    ADDRESS-010
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-cont
   OPERAND2-
    COMMENT-
    ADDRESS-011
      LABEL-add_to_snake_up
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-011
      LABEL-
INSTRUCTION-SUB
   OPERAND1-reg_snake_head_row
   OPERAND2-01
    COMMENT-
    ADDRESS-012
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-cont
   OPERAND2-
    COMMENT-
    ADDRESS-013
      LABEL-add_to_snake_down
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-013
      LABEL-
INSTRUCTION-ADD
   OPERAND1-reg_snake_head_row
   OPERAND2-01
    COMMENT-
    ADDRESS-014
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-cont
   OPERAND2-
    COMMENT-
    ADDRESS-015
      LABEL-cont
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-015
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_fb_col
   OPERAND2-reg_snake_head_col
    COMMENT-
    ADDRESS-016
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_fb_row
   OPERAND2-reg_snake_head_row
    COMMENT-
    ADDRESS-017
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; check if within the bounds of our screen
    ADDRESS-017
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s0
   OPERAND2-reg_fb_row
    COMMENT-
    ADDRESS-018
      LABEL-
INSTRUCTION-AND
   OPERAND1-s0
   OPERAND2-20
    COMMENT-
    ADDRESS-019
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-end_game
    COMMENT-
    ADDRESS-01A
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s0
   OPERAND2-reg_fb_col
    COMMENT-
    ADDRESS-01B
      LABEL-
INSTRUCTION-SUB
   OPERAND1-s0
   OPERAND2-28
    COMMENT-
    ADDRESS-01C
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-s0
   OPERAND2-00
    COMMENT-
    ADDRESS-01D
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-end_game
    COMMENT-
    ADDRESS-01E
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s0
   OPERAND2-reg_fb_col
    COMMENT-
    ADDRESS-01F
      LABEL-
INSTRUCTION-AND
   OPERAND1-s0
   OPERAND2-40
    COMMENT-
    ADDRESS-020
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-s0
   OPERAND2-00
    COMMENT-
    ADDRESS-021
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-end_game
    COMMENT-
    ADDRESS-022
      LABEL-
INSTRUCTION-CALL
   OPERAND1-fb_read
   OPERAND2-
    COMMENT-
    ADDRESS-023
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-reg_fb_data
   OPERAND2-02
    COMMENT-; is read pixel a food pixel?
    ADDRESS-024
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-cont2
    COMMENT-
    ADDRESS-025
      LABEL-
INSTRUCTION-ADD
   OPERAND1-reg_score
   OPERAND2-01
    COMMENT-
    ADDRESS-026
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_isfood
   OPERAND2-01
    COMMENT-
    ADDRESS-027
      LABEL-cont2
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-027
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-reg_fb_data
   OPERAND2-01
    COMMENT-; is read pixel snake?
    ADDRESS-028
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-cont4
    COMMENT-
    ADDRESS-029
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-end_game
   OPERAND2-
    COMMENT-; end game
    ADDRESS-02A
      LABEL-cont4
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-02A
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_fb_data
   OPERAND2-01
    COMMENT-; code for snake pixel is 01
    ADDRESS-02B
      LABEL-
INSTRUCTION-CALL
   OPERAND1-fb_insert
   OPERAND2-
    COMMENT-
    ADDRESS-02C
      LABEL-
INSTRUCTION-STORE
   OPERAND1-reg_snake_direction
   OPERAND2-(reg_ram_index_head)
    COMMENT-; store the direction we went into scratchpad ram
    ADDRESS-02D
      LABEL-
INSTRUCTION-ADD
   OPERAND1-reg_ram_index_head
   OPERAND2-01
    COMMENT-
    ADDRESS-02E
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; tail removal
    ADDRESS-02E
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-reg_isfood
   OPERAND2-01
    COMMENT-; if we ate food, don't remove anything
    ADDRESS-02F
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-cont3
    COMMENT-
    ADDRESS-030
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_fb_col
   OPERAND2-reg_snake_tail_col
    COMMENT-
    ADDRESS-031
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_fb_row
   OPERAND2-reg_snake_tail_row
    COMMENT-
    ADDRESS-032
      LABEL-
INSTRUCTION-CALL
   OPERAND1-fb_remove
   OPERAND2-
    COMMENT-
    ADDRESS-033
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-s0
   OPERAND2-(reg_ram_index_tail)
    COMMENT-; fetch direction to remove next from rom
    ADDRESS-034
      LABEL-
INSTRUCTION-ADD
   OPERAND1-reg_ram_index_tail
   OPERAND2-01
    COMMENT-
    ADDRESS-035
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-s0
   OPERAND2-keycode_left
    COMMENT-
    ADDRESS-036
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-remove_from_snake_left
    COMMENT-
    ADDRESS-037
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-s0
   OPERAND2-keycode_right
    COMMENT-
    ADDRESS-038
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-remove_from_snake_right
    COMMENT-
    ADDRESS-039
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-s0
   OPERAND2-keycode_up
    COMMENT-
    ADDRESS-03A
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-remove_from_snake_up
    COMMENT-
    ADDRESS-03B
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-s0
   OPERAND2-keycode_down
    COMMENT-
    ADDRESS-03C
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-remove_from_snake_down
    COMMENT-
    ADDRESS-03D
      LABEL-remove_from_snake_left
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-03D
      LABEL-
INSTRUCTION-SUB
   OPERAND1-reg_snake_tail_col
   OPERAND2-01
    COMMENT-
    ADDRESS-03E
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-cont1
   OPERAND2-
    COMMENT-
    ADDRESS-03F
      LABEL-remove_from_snake_right
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-03F
      LABEL-
INSTRUCTION-ADD
   OPERAND1-reg_snake_tail_col
   OPERAND2-01
    COMMENT-
    ADDRESS-040
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-cont1
   OPERAND2-
    COMMENT-
    ADDRESS-041
      LABEL-remove_from_snake_up
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-041
      LABEL-
INSTRUCTION-SUB
   OPERAND1-reg_snake_tail_row
   OPERAND2-01
    COMMENT-
    ADDRESS-042
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-cont1
   OPERAND2-
    COMMENT-
    ADDRESS-043
      LABEL-remove_from_snake_down
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-043
      LABEL-
INSTRUCTION-ADD
   OPERAND1-reg_snake_tail_row
   OPERAND2-01
    COMMENT-
    ADDRESS-044
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-cont1
   OPERAND2-
    COMMENT-
    ADDRESS-045
      LABEL-cont1
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-045
      LABEL-cont3
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-045
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; randomly add food (or not add)
    ADDRESS-045
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-reg_isfood
   OPERAND2-rand_port_id
    COMMENT-
    ADDRESS-046
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-reg_isfood
   OPERAND2-07
    COMMENT-; compare with 10 (dec), because a third of the time the input will be smaller (random number from 0-30)
    ADDRESS-047
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-C
   OPERAND2-cont5
    COMMENT-
    ADDRESS-048
      LABEL-
INSTRUCTION-CALL
   OPERAND1-food_insert
   OPERAND2-
    COMMENT-
    ADDRESS-049
      LABEL-cont5
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-049
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-reg_score
   OPERAND2-ps2_port_id
    COMMENT-
    ADDRESS-04A
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; output score
    ADDRESS-04A
      LABEL-
INSTRUCTION-CALL
   OPERAND1-delay
   OPERAND2-
    COMMENT-
    ADDRESS-04B
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-main_game
   OPERAND2-
    COMMENT-
    ADDRESS-04C
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; routine that clears the screen and waits for input - enter for another game
    ADDRESS-04C
      LABEL-end_game
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-04C
      LABEL-
INSTRUCTION-CALL
   OPERAND1-clear_fb
   OPERAND2-
    COMMENT-
    ADDRESS-04D
      LABEL-another_game
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-04D
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-reg_ps2_data
   OPERAND2-keycode_enter
    COMMENT-
    ADDRESS-04E
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-start_game
    COMMENT-
    ADDRESS-04F
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-another_game
    COMMENT-
    ADDRESS-050
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; 1s delay
    ADDRESS-050
      LABEL-delay
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-050
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s0
   OPERAND2-FF
    COMMENT-
    ADDRESS-051
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_isfood
   OPERAND2-FF
    COMMENT-
    ADDRESS-052
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_counter1
   OPERAND2-40
    COMMENT-; 7f - 128 (1s) ; 40 - 64 (0.5s)
    ADDRESS-053
      LABEL-delayloop0
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-053
      LABEL-delayloop1
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-053
      LABEL-delayloop2
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-053
      LABEL-
INSTRUCTION-SUB
   OPERAND1-reg_isfood
   OPERAND2-01
    COMMENT-
    ADDRESS-054
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-reg_isfood
   OPERAND2-00
    COMMENT-
    ADDRESS-055
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-delayloop2
    COMMENT-
    ADDRESS-056
      LABEL-
INSTRUCTION-SUB
   OPERAND1-s0
   OPERAND2-01
    COMMENT-
    ADDRESS-057
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-s0
   OPERAND2-00
    COMMENT-
    ADDRESS-058
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-delayloop1
    COMMENT-
    ADDRESS-059
      LABEL-
INSTRUCTION-SUB
   OPERAND1-reg_counter1
   OPERAND2-01
    COMMENT-
    ADDRESS-05A
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-reg_counter1
   OPERAND2-00
    COMMENT-
    ADDRESS-05B
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-delayloop0
    COMMENT-
    ADDRESS-05C
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-05D
      LABEL-init_snake
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-05D
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_score
   OPERAND2-02
    COMMENT-
    ADDRESS-05E
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_snake_len
   OPERAND2-init_snake_len
    COMMENT-
    ADDRESS-05F
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_snake_direction
   OPERAND2-keycode_right
    COMMENT-
    ADDRESS-060
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_ram_index_head
   OPERAND2-01
    COMMENT-
    ADDRESS-061
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_ram_index_tail
   OPERAND2-00
    COMMENT-
    ADDRESS-062
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s0
   OPERAND2-keycode_right
    COMMENT-; load direction to remove next
    ADDRESS-063
      LABEL-
INSTRUCTION-STORE
   OPERAND1-s0
   OPERAND2-00
    COMMENT-; store direction to remove next
    ADDRESS-064
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_snake_head_row
   OPERAND2-02
    COMMENT-; snake head row
    ADDRESS-065
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_snake_head_col
   OPERAND2-03
    COMMENT-; snake head col
    ADDRESS-066
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_snake_tail_row
   OPERAND2-02
    COMMENT-; snake tail row
    ADDRESS-067
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_snake_tail_col
   OPERAND2-02
    COMMENT-; snake tail col
    ADDRESS-068
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_fb_data
   OPERAND2-01
    COMMENT-
    ADDRESS-069
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_fb_row
   OPERAND2-02
    COMMENT-
    ADDRESS-06A
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_fb_col
   OPERAND2-02
    COMMENT-
    ADDRESS-06B
      LABEL-
INSTRUCTION-CALL
   OPERAND1-fb_insert
   OPERAND2-
    COMMENT-
    ADDRESS-06C
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_fb_col
   OPERAND2-03
    COMMENT-
    ADDRESS-06D
      LABEL-
INSTRUCTION-CALL
   OPERAND1-fb_insert
   OPERAND2-
    COMMENT-
    ADDRESS-06E
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-06F
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; insert all the initial food
    ADDRESS-06F
      LABEL-load_food
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-06F
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_counter1
   OPERAND2-10
    COMMENT-
    ADDRESS-070
      LABEL-food_loop
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-070
      LABEL-
INSTRUCTION-CALL
   OPERAND1-food_insert
   OPERAND2-
    COMMENT-
    ADDRESS-071
      LABEL-
INSTRUCTION-SUB
   OPERAND1-reg_counter1
   OPERAND2-01
    COMMENT-
    ADDRESS-072
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-reg_counter1
   OPERAND2-00
    COMMENT-
    ADDRESS-073
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-food_loop
    COMMENT-
    ADDRESS-074
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-075
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; insert food at a random location : request two random numbers, insert 10 at location
    ADDRESS-075
      LABEL-food_insert
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-075
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-reg_fb_col
   OPERAND2-rand_port_id
    COMMENT-
    ADDRESS-076
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-reg_fb_row
   OPERAND2-rand_port_id
    COMMENT-
    ADDRESS-077
      LABEL-
INSTRUCTION-CALL
   OPERAND1-fb_read
   OPERAND2-
    COMMENT-; read pixel at wanted location to check if the snake is already occupying it
    ADDRESS-078
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-reg_fb_data
   OPERAND2-01
    COMMENT-; is read pixel a snake pixel?
    ADDRESS-079
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-skipfood
    COMMENT-
    ADDRESS-07A
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_fb_data
   OPERAND2-02
    COMMENT-
    ADDRESS-07B
      LABEL-
INSTRUCTION-CALL
   OPERAND1-fb_insert
   OPERAND2-
    COMMENT-
    ADDRESS-07C
      LABEL-skipfood
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-07C
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-07D
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; clear ROM to all 0
    ADDRESS-07D
      LABEL-clear_fb
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-07D
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_fb_row
   OPERAND2-00
    COMMENT-; outer loop counter
    ADDRESS-07E
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_fb_col
   OPERAND2-00
    COMMENT-; inner loop counter
    ADDRESS-07F
      LABEL-clear_outer_loop
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-07F
      LABEL-clear_inner_loop
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-07F
      LABEL-
INSTRUCTION-CALL
   OPERAND1-fb_remove
   OPERAND2-
    COMMENT-
    ADDRESS-080
      LABEL-
INSTRUCTION-ADD
   OPERAND1-reg_fb_col
   OPERAND2-01
    COMMENT-
    ADDRESS-081
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-reg_fb_col
   OPERAND2-28
    COMMENT-; decimal 40
    ADDRESS-082
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-clear_inner_loop
    COMMENT-
    ADDRESS-083
      LABEL-
INSTRUCTION-ADD
   OPERAND1-reg_fb_row
   OPERAND2-01
    COMMENT-
    ADDRESS-084
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-reg_fb_row
   OPERAND2-20
    COMMENT-; decimal 32
    ADDRESS-085
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-clear_outer_loop
    COMMENT-
    ADDRESS-086
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-087
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; frame buffer insert / remove routines
    ADDRESS-087
      LABEL-fb_insert
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-087
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;;;; do it manually before calling LOAD reg_fb_data, 01
    ADDRESS-087
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-reg_fb_row
   OPERAND2-row_port_id
    COMMENT-
    ADDRESS-088
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-reg_fb_col
   OPERAND2-column_port_id
    COMMENT-
    ADDRESS-089
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-reg_fb_data
   OPERAND2-data_port_id
    COMMENT-
    ADDRESS-08A
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-08B
      LABEL-fb_remove
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-08B
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;;;; do it manually before calling LOAD reg_fb_data, 00
    ADDRESS-08B
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_fb_data
   OPERAND2-00
    COMMENT-
    ADDRESS-08C
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-reg_fb_row
   OPERAND2-row_port_id
    COMMENT-
    ADDRESS-08D
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-reg_fb_col
   OPERAND2-column_port_id
    COMMENT-
    ADDRESS-08E
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-reg_fb_data
   OPERAND2-data_port_id
    COMMENT-
    ADDRESS-08F
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-090
      LABEL-fb_read
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-090
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-reg_fb_row
   OPERAND2-row_port_id
    COMMENT-
    ADDRESS-091
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-reg_fb_col
   OPERAND2-column_port_id
    COMMENT-
    ADDRESS-092
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-reg_fb_data
   OPERAND2-data_port_id
    COMMENT-
    ADDRESS-093
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-094
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; interrupt service routine : load keycode into reg_direction from ps2 input if valid
    ADDRESS-094
      LABEL-isr
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-094
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-reg_ps2_data
   OPERAND2-ps2_port_id
    COMMENT-
    ADDRESS-095
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-reg_ps2_data
   OPERAND2-keycode_left
    COMMENT-
    ADDRESS-096
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-load
    COMMENT-
    ADDRESS-097
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-reg_ps2_data
   OPERAND2-keycode_right
    COMMENT-
    ADDRESS-098
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-load
    COMMENT-
    ADDRESS-099
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-reg_ps2_data
   OPERAND2-keycode_up
    COMMENT-
    ADDRESS-09A
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-load
    COMMENT-
    ADDRESS-09B
      LABEL-
INSTRUCTION-COMPARE
   OPERAND1-reg_ps2_data
   OPERAND2-keycode_down
    COMMENT-
    ADDRESS-09C
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-fin
    COMMENT-
    ADDRESS-09D
      LABEL-load
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-09D
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-reg_snake_direction
   OPERAND2-reg_ps2_data
    COMMENT-
    ADDRESS-09E
      LABEL-fin
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-09E
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; return from isr and enable interrupts
    ADDRESS-09E
      LABEL-
INSTRUCTION-RETURNI
   OPERAND1-ENABLE
   OPERAND2-
    COMMENT-
    ADDRESS-09F
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; interrupt vector - at last address in the ROM
    ADDRESS-3FF
      LABEL-
INSTRUCTION-ADDRESS
   OPERAND1-3FF
   OPERAND2-
    COMMENT-
    ADDRESS-3FF
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-isr
   OPERAND2-
    COMMENT-
